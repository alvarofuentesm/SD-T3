syntax = "proto3";
package t3;
option go_package =  "./;t3";

message Comando { // solicitu de Informates o Leia
    string COMMAND = 1; // comando     
    string planeta = 2; // nombre planeta  
    string ciudad = 3; // nombre ciudad
    string valor = 4; // valor de comando de existir, -1 en caso contrario
}
  
message RespuestaBroker { // respuesta del broker 
    string IP = 1; // IP del Fulcrum 
    string vector_clock = 2; // reloj vector (para Leia) 
    string valor = 3; // reloj vector (para Leia) 
}

message RespuestaReplica { // respuesta replica Fulcrum
    string vector_clock = 1; // reloj vector
    string valor = 2; // valor solicitado (por Leia) 
}

message Message {
    string body = 1;
}

// Interface exported by the server (Broker)
service BrokerService {
    // Simple rpc
    rpc SayHello(Message) returns (Message) {} // para debug
    
    rpc AddCity(Comando) returns (RespuestaBroker) {} 
    rpc UpdateName(Comando) returns (RespuestaBroker) {} 
    rpc UpdateNumber(Comando) returns (RespuestaBroker) {} 
    rpc DeleteCity(Comando) returns (RespuestaBroker) {} 

    rpc GetNumberRebelds(Comando) returns (RespuestaBroker) {}
}

// Interface exported by the server (Fulcrum)
service FulcrumService {
    // Simple rpc
    rpc SayHello(Message) returns (Message) {} // para debug
    
    rpc AddCity(Comando) returns (RespuestaReplica) {} 
    rpc UpdateName(Comando) returns (RespuestaReplica) {} 
    rpc UpdateNumber(Comando) returns (RespuestaReplica) {} 
    rpc DeleteCity(Comando) returns (RespuestaReplica) {} 
    
    rpc GetNumberRebelds(Comando) returns (RespuestaReplica) {}
}
